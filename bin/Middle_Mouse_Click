#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH << File.dirname(File.expand_path(__FILE__))

require 'English'
require_relative '../src/windows/Root_Window'
require_relative '../src/windows/Window'
require_relative '../src/windows/Mouse_Pointer'
require_relative '../src/windows/Location_Name'

require_relative '../src/windows/Fullscreen'
require_relative '../src/windows/Left_Side'
require_relative '../src/windows/Right_Bottom'
require_relative '../src/windows/Right_Side'
require_relative '../src/windows/Right_Top'
require_relative '../src/windows/Top_Half'
require_relative '../src/windows/Top_Stamp'
require_relative '../src/windows/Bottom_Half'
require_relative '../src/windows/Bottom_Stamp'

cmd = ARGV.join(' ')
prog = __FILE__.split('/').last

def smplayer?
  !!`xtitle`[' - SMPlayer']
end

case cmd
when '-h', '--help', 'help'
  puts "#{prog} -h|--help|help  --  Show this message."
  puts "#{prog}                 -- Run root window action."
  puts "#{prog} mouse_location"
  puts "#{prog} root_mouse_location"
  exit 0

when ''
  true

when 'window'
  puts 'window action'
  exit 2

when 'mouse_location'
  puts Location_Name.new(Window.new, Mouse_Pointer.new).name
  exit 0

when 'root_mouse_location'
  puts Location_Name.new(Root_Window.new, Mouse_Pointer.new).name
  exit 0

else
  warn "!!! Unknown action:  #{cmd.inspect}"
  exit 2

end # case

loc = Location_Name.new(ROOT, Mouse_Pointer.new)
win = Window.new

case loc.name
when 'top_right_corner'
  win.move_to(Right_Top)
# when 'bottom_left_corner'
#   win.move_to(Right_Bottom)
when 'bottom_right_corner'
  win.move_to(Right_Bottom)
when 'top_edge'
  if smplayer?
    win.move_to(Top_Half)
  else
    win.move_to(Top_Stamp)
  end
when 'bottom_edge'
  if smplayer?
    win.move_to(Bottom_Half)
  else
    win.move_to(Bottom_Stamp)
  end
when 'left_edge'
  win.move_to(Left_Side)
when 'right_edge'
  win.move_to(Right_Side)
when 'left_side'
  system 'xdotool key --clearmodifiers Alt_L+Left'
when 'right_side'
  system 'xdotool key --clearmodifiers Alt_L+Right'
when 'center'
  win.move_to(Fullscreen)
else
  puts loc.name.inspect
end # case
