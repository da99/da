#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH << File.dirname(File.expand_path(__FILE__))

require 'English'
require_relative '../src/windows/Root_Window'
require_relative '../src/windows/Window'
require_relative '../src/windows/Move'
require_relative '../src/windows/Mouse_Pointer'
require_relative '../src/windows/Location_Name'

require_relative '../src/windows/Fullscreen'
require_relative '../src/windows/Left_Side'
require_relative '../src/windows/Right_Bottom'
require_relative '../src/windows/Right_Side'
require_relative '../src/windows/Right_Top'
require_relative '../src/windows/Top_Half'
require_relative '../src/windows/Top_Stamp'
require_relative '../src/windows/Bottom_Half'
require_relative '../src/windows/Bottom_Stamp'
require_relative '../src/windows/State'

cmd = ARGV.join(' ')
prog = __FILE__.split('/').last

target_area = nil

case cmd
when '-h', '--help', 'help'
  puts "#{prog} -h|--help|help  --  Show this message."
  puts "#{prog}                 -- Run root window action."
  puts "#{prog} inspect current|Left_Side"
  puts "#{prog} move [DIRECTION]"
  puts "#{prog} list directions"
  puts "#{prog} mouse_location"
  exit 0

when ''
  true

when 'inspect current'
  puts Window.new_current.inspect

when 'inspect Left_Side'
  puts Left_Side.inspect

when 'mouse_location'
  puts Location_Name.new(ROOT, Mouse_Pointer.new).name
  exit 0

when 'middle_click'
  loc = Location_Name.new(ROOT, Mouse_Pointer.new)
  target_area = case loc.name
                when 'top_right_corner'
                  Right_Top
                when 'top_left_corner'
                  Left_Side
                when 'bottom_right_corner'
                  Right_Bottom
                when 'top_edge'
                  if smplayer?
                    Top_Half
                  else
                    Top_Stamp
                  end
                when 'bottom_edge'
                  Bottom_Half
                when 'left_edge'
                  Left_Side
                when 'right_edge'
                  Right_Side
                when 'left_side'
                  system 'xdotool key --clearmodifiers Left'
                  loc.name
                  exit 0
                when 'right_side'
                  system 'xdotool key --clearmodifiers Right'
                  loc.name
                  exit 0
                when 'center'
                  Fullscreen
                else
                  loc.name
                end # case

when 'move Fullscreen'
  target_area = Fullscreen
when 'move Left_Side'
  target_area = Left_Side
when 'move Right_Bottom'
  target_area = Right_Bottom
when 'move Right_Side'
  target_area = Right_Side
when 'move Right_Top'
  target_area = Right_Top
when 'move Top_Half'
  target_area = Top_Half
when 'move Top_Stamp'
  target_area = Top_Stamp
when 'move Bottom_Half'
  target_area = Bottom_Half
when 'move Bottom_Stamp'
  target_area = Bottom_Stamp

when 'list directions'
  File.read(__FILE__).each_line do |l|
    next unless l[/^when 'move ([^']+)/]

    puts Regexp.last_match(1)
  end
  exit 0
else
  warn "!!! Unknown action:  #{cmd.inspect}"
  exit 2

end # case

if target_area && !target_area.is_a?(String)
  win = Window.new_current
  win.move_to(target_area)
  STATE.write_position(win, target_area)
else
  puts target_area.inspect
  exit 2
end
